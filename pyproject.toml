[build-system]
requires = ['flit_core >=3.2']
build-backend = 'flit_core.buildapi'

[project]
name = 'mml_utils'
version = '0.2.2'
module = 'mml_utils'
authors = [
    { name = 'dcronkite', email = 'dcronkite+pypi@gmail.com' },
]
readme = 'README.md'
description = 'Library to support the use/deployment of Metamaplite.'
home-page = 'https://github.com/kpwhri/mml_utils'
dependencies = [
    'click>=8.0.0',
    'loguru',
]
requires-python = '>=3.8'
keywords = ['nlp', 'information extraction', 'metamap', 'metamaplite', 'ctakes']
classifiers = [# https://pypi.org/classifiers/
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Science/Research',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Text Processing :: Linguistic',
    'License :: OSI Approved :: MIT License',
    'Intended Audience :: Healthcare Industry',
]

[project.optional-dependencies]
dev = ['pytest']
doc = [
    'sphinx',
    'myst-parser',
    'sphinx-autodoc-typehints',
    'sphinx-book-theme',
]
pandas = ['pandas']
excel = ['openpyxl']

[project.scripts]
mml-run-filelist = "mml_utils.scripts.run_mml_on_filelist:run_single_mml_filelist"
mml-copy-notes = "mml_utils.scripts.copy_new_mml_directory:copy_to_new_mml_directory"
mml-build-filelists = "mml_utils.scripts.build_filelists:run"
mml-run-filelists-dir = "mml_utils.scripts.run_mml:run_mml_filelists_in_dir"
mml-extract-mml = "mml_utils.scripts.extract_mml_output:extract_mml"
mml-check-progress = "mml_utils.scripts.check_mml_progress:check_mml_progress_repeat"
mml-split-filelist = "mml_utils.scripts.split_filelist:split_filelist"
mml-split-files = "mml_utils.scripts.split_long_file:split_files_on_lines"
mml-run-afep = "mml_utils.scripts.run_afep:run_afep_algorithm"
mml-check-offsets = "mml_utils.scripts.check_mml_offsets:check_mml_offsets"
mml-prepare-review = "mml_utils.scripts.extract_data_for_review:_extract_data_for_review"
mml-prepare-review-sample = "mml_utils.scripts.sample_review_set:_compile_to_excel"
mml-sql-to-txt = "mml_utils.scripts.extract_text_to_files:text_from_database"
mml-csv-to-txt = "mml_utils.scripts.extract_text_to_files:text_from_csv"
mml-run-ctakes = "mml_utils.scripts.run_ctakes:run_ctakes"
mml-build-freqs = "mml_utils.scripts.build_frequency_tables:_build_frequency_tables"
